// <auto-generated />
using System;
using BloodBankManagementSystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BloodBankManagementSystem.Migrations
{
    [DbContext(typeof(BloodBankContext))]
    [Migration("20250307170501_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BloodBankManagementSystem.Models.BloodBank", b =>
                {
                    b.Property<int>("BloodBankID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BloodBankID"));

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BloodBankID");

                    b.ToTable("BloodBanks");
                });

            modelBuilder.Entity("BloodBankManagementSystem.Models.BloodDonationCamp", b =>
                {
                    b.Property<int>("BloodDonationCampID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BloodDonationCampID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BloodBankID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CampEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CampName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CampStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BloodDonationCampID");

                    b.HasIndex("BloodBankID");

                    b.ToTable("BloodDonationCamps");
                });

            modelBuilder.Entity("BloodBankManagementSystem.Models.BloodDonor", b =>
                {
                    b.Property<int>("BloodDonorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BloodDonorID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("BloodDonationCampID")
                        .HasColumnType("int");

                    b.Property<string>("BloodType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Disease")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HBCount")
                        .HasColumnType("int");

                    b.Property<int?>("HospitalID")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastDonationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalDonations")
                        .HasColumnType("int");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("BloodDonorID");

                    b.HasIndex("BloodDonationCampID");

                    b.HasIndex("HospitalID");

                    b.ToTable("BloodDonors");
                });

            modelBuilder.Entity("BloodBankManagementSystem.Models.BloodInventory", b =>
                {
                    b.Property<int>("BloodInventoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BloodInventoryID"));

                    b.Property<int>("BloodBankID")
                        .HasColumnType("int");

                    b.Property<string>("BloodGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberofBottles")
                        .HasColumnType("int");

                    b.HasKey("BloodInventoryID");

                    b.HasIndex("BloodBankID");

                    b.ToTable("BloodInventories");
                });

            modelBuilder.Entity("BloodBankManagementSystem.Models.Hospital", b =>
                {
                    b.Property<int>("HospitalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HospitalID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BloodBankID")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HospitalID");

                    b.HasIndex("BloodBankID");

                    b.ToTable("Hospitals");
                });

            modelBuilder.Entity("BloodBankManagementSystem.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BloodBankManagementSystem.Models.BloodDonationCamp", b =>
                {
                    b.HasOne("BloodBankManagementSystem.Models.BloodBank", "BloodBank")
                        .WithMany()
                        .HasForeignKey("BloodBankID");

                    b.Navigation("BloodBank");
                });

            modelBuilder.Entity("BloodBankManagementSystem.Models.BloodDonor", b =>
                {
                    b.HasOne("BloodBankManagementSystem.Models.BloodDonationCamp", "BloodDonationCamp")
                        .WithMany("BloodDonors")
                        .HasForeignKey("BloodDonationCampID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("BloodBankManagementSystem.Models.Hospital", "Hospital")
                        .WithMany("BloodDonors")
                        .HasForeignKey("HospitalID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("BloodDonationCamp");

                    b.Navigation("Hospital");
                });

            modelBuilder.Entity("BloodBankManagementSystem.Models.BloodInventory", b =>
                {
                    b.HasOne("BloodBankManagementSystem.Models.BloodBank", "BloodBank")
                        .WithMany()
                        .HasForeignKey("BloodBankID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BloodBank");
                });

            modelBuilder.Entity("BloodBankManagementSystem.Models.Hospital", b =>
                {
                    b.HasOne("BloodBankManagementSystem.Models.BloodBank", "BloodBank")
                        .WithMany("Hospitals")
                        .HasForeignKey("BloodBankID");

                    b.Navigation("BloodBank");
                });

            modelBuilder.Entity("BloodBankManagementSystem.Models.BloodBank", b =>
                {
                    b.Navigation("Hospitals");
                });

            modelBuilder.Entity("BloodBankManagementSystem.Models.BloodDonationCamp", b =>
                {
                    b.Navigation("BloodDonors");
                });

            modelBuilder.Entity("BloodBankManagementSystem.Models.Hospital", b =>
                {
                    b.Navigation("BloodDonors");
                });
#pragma warning restore 612, 618
        }
    }
}
